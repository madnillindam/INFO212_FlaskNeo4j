
@app.route("/order_car/<int:customer_id>/<int:car_id>", methods=["GET"])
def get_car_order(customer_id, car_id):
    
    return order_car(customer_id=customer_id, car_id=car_id)

# Sender videre to tall - f.eks. 2000 og 2


### ACTIONS ###

# ORDER CAR

def order_car(customer_id, car_id):
	can_rent = False
	car_available = False

	# Check if customer is eligible for renting:
	def customer_can_rent(customer_id):
		# Først har denne customer_noden en relasjon? 
    		with get_connection().session as session:
			nodes_with_relationship = session.run("MATCH c=()-[r:RENTED]->() RETURN c LIMIT 25") #trenger ikke bry oss om limit pga. db er så liten, så det (LIMIT 25) kan sikkert fjernes		
			if customer id_in list_of_nodes_with_relationship:
				return order_declined
			else:
				return can_rent=True		
	# Is the car available?
	def car_avaliable(car_id):
		car_data = findCarByIdNumber(car_id)            # Returnerer dict med innhold i den aktuelle bilnoden	
		if car_data[0]["car_state"] == "booked":
			return order_declined
		else:
			return car_available=True

	if can_rent and car_available:
		rentCar(customer_id, car_id)

# RENT CAR   
def rentCar(customer_id, car_id):
	with get_connection().session as session:
		# Create a RENTED relationship between customer node and car node
		#Usikker på syntaks. Create, eller kanskje Update?? kanskje også "exceute query istedenfor run, siden vi ikke returnerer noe? 
		session.run(CREATE (c:Customer {customer_id: $customer_id)-[:RENTED] ->(a:Cars {car_id: $car_id});") 
			continue
		
	def set_car_status(car_id):
		# Enten først hente car_data og bruke det for å kalle på eksisterende metode
		## Jeg husker ikke om den metoden for å oppdatere bil krever at alle parametrene er med, men tror det :S Derfor har jeg foreslått dette. 
		car_data = findCarByIdNumber(car_id)
		update_car(make = car_data[0]["make"] , model = car_data[0]["model"], car_id = car_data[0]["car_id"], year = car_data[0]["year"], location = car_data[0]["location"], car_state = "booked")
		
		# Eller - bare sende query direkte uten å gå via den eksisterende metoden vi har
		    with get_connection().session() as session: 
        			cars = session.run("MATCH (c:Cars{car_id: $car_id}) SET c.make=$make, c.model=$model, c.car_id=$car_id, c.year=$year, c.location=$location, c.car_state=$car_state RETURN c;", 
                           		make=make, model=model, car_id=car_id, year=year, location=location, car_state="booked")
		
		
		
		
		return f"car booked"
		
		
		
		
		





	